spring:
  application:
    name: profile
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      idle-timeout: 30000
      max-lifetime: 60000
      connection-timeout: 30000
      pool-name: MyHikariCP
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: "profile-service"
      value-deserializer: org.springframework.kafka.support.serializer.DelegatingByTopicDeserializer
      properties:
        spring.kafka.value.serialization.bytopic.config: "key.+:org.apache.kafka.common.serialization.StringDeserializer"
        spring.kafka.value.serialization.bytopic.default: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    properties:
      max.block.ms: 240000
      spring:
        json:
          trusted:
            packages: "ace.charitan.*"
  cache:
    type: redis
    redis:
      time-to-live: 6000000
  data:
    redis:
      sentinel:
        nodes: ${SENTINEL_NODES:profile-sentinel-one:26379,profile-sentinel-two:26379,profile-sentinel-three:26379}
        master: ${SENTINEL_MASTER:profile-master}
      pool:
        max-active: 128
        max-idle: 20
        min-idle: 1
        max-wait-time: 6000000
server:
  port: 0
eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
  instance:
    preferIpAddress: true
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.redis: DEBUG
springdoc:
  api-docs:
    enabled: true
  swagger-ui:
    enabled: true
stripe:
  secret: ${STRIPE_SECRET_KEY}
s3:
  endpoint: ${S3_ENDPOINT:http://minio:9000}
  key:
    access: ${S3_KEY_ACCESS:profile-access-key}
    secret: ${S3_KEY_SECRET:profile-secret-key}